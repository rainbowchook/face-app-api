name: Manual CDK Deployment

on:
  workflow_dispatch:

jobs:
  deploy-cdk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies CDK and TypeScript
        run: |
          cd faces-cdk-project
          npm ci && npm cache clean --force
        
      - name: Build with TypeScript
        env: 
          NODE_ENV: production
        run: |
          cd faces-cdk-project
          npm run build
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install AWS CDK
        run: npm install -g aws-cdk
        
      - name: Synth CDK
        env:
            CLARIFAI_API_KEY: ${{ secrets.CLARIFAI_API_KEY }}
            CLARIFAI_PAT_KEY: ${{ secrets.CLARIFAI_PAT_KEY }}
            CLARIFAI_USER_ID: ${{ secrets.CLARIFAI_USER_ID }}
            CLARIFAI_APP_ID: ${{ secrets.CLARIFAI_APP_ID }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PORT: ${{ secrets.DB_PORT }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            PORT: ${{ secrets.PORT }}
        run: |
          cdk synth \
          --app 'node bin/faces-cdk-project.js'
        working-directory: faces-cdk-project
          
      - name: Deploy CDK stack
        run: cdk deploy --app cdk.out FacesCdkProjectStack --require-approval never
        working-directory: faces-cdk-project  
